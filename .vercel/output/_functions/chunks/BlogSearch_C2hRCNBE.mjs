import { c as createComponent, m as maybeRenderHead, r as renderComponent, a as renderTemplate, f as defineScriptVars } from './astro/server_Tp03px_G.mjs';
import 'kleur/colors';
import { a as $$Wrapper, b as $$Text, g as getCollection } from './BaseLayout_DZYrKpAc.mjs';
import { $ as $$Button } from './Button_DdE7ujd6.mjs';
import 'clsx';

const $$SubsCta = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section> ${renderComponent($$result, "Wrapper", $$Wrapper, { "variant": "standard", "class": "py-2" }, { "default": ($$result2) => renderTemplate` ${renderComponent($$result2, "Text", $$Text, { "tag": "h1", "variant": "textBase", "class": "text-black dark:text-white font-medium" }, { "default": ($$result3) => renderTemplate`
Join us to get our news in your inbox.
` })} <form action="" class="mt-2"> <div class="flex w-full flex-col gap-1 sm:flex-row"> <input name="email" type="email" class="block w-full rounded-lg border h-10 dark:bg-white/5 border-black/10 px-4 py-2 font-spline text-sm font-medium text-zinc-800 placeholder-zinc-400 focus:border-zinc-500 focus:outline-none focus:ring-2 lg:px-6 focus:ring-zinc-600/50 disabled:opacity-50" placeholder="Enter your email..." required=""> ${renderComponent($$result2, "Button", $$Button, { "size": "medium", "variant": "primary" }, { "default": ($$result3) => renderTemplate`Subscribe` })} </div> </form> ` })} </section>`;
}, "/Users/adamking/claude-code-projects/ak-site/src/components/forms/SubsCta.astro", void 0);

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$BlogSearch = createComponent(async ($$result, $$props, $$slots) => {
  const posts = await Promise.all(
    (await getCollection("posts")).map(async (post) => ({
      title: post.data.title,
      description: post.data.description,
      slug: post.slug
    }))
  );
  return renderTemplate(_a || (_a = __template(["", '<div class="relative ml-auto w-full"> <button type="button" id="searchButton" class="w-full pr-4 items-center gap-2 flex pl-2 rounded-lg border h-10 dark:bg-white/5 border-black/10 py-2 font-spline text-sm font-medium text-zinc-800 dark:text-zinc-500 placeholder-zinc-400 focus:border-zinc-500 focus:outline-none focus:ring-2 focus:ring-zinc-600/50 disabled:opacity-50" aria-label="Search posts"> <svg xmlns="http://www.w3.org/2000/svg" class="size-4" fill="none" viewBox="0 0 24 24" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path> </svg>\nSearch\n</button> <div id="searchModal" class="fixed inset-0 z-50 overflow-y-auto hidden" role="dialog" aria-modal="true"> <div class="min-h-screen px-4 text-center"> <div class="fixed inset-0 bg-zinc-950/50 backdrop-blur transition-opacity" id="modalOverlay"></div> <div class="inline-block w-full max-w-2xl px-8 mb-8 mt-12 lg:mt-48 text-left align-middle transition-all transform"> <div class="hidden"> <button type="button" id="closeSearch" class="text-zinc-400 hover:text-zinc-500 cursor-pointer ml-auto" aria-label="Close search"> <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704ZM9.85358 5.14644C10.0488 5.3417 10.0488 5.65829 9.85358 5.85355L8.20713 7.49999L9.85358 9.14644C10.0488 9.3417 10.0488 9.65829 9.85358 9.85355C9.65832 10.0488 9.34173 10.0488 9.14647 9.85355L7.50002 8.2071L5.85358 9.85355C5.65832 10.0488 5.34173 10.0488 5.14647 9.85355C4.95121 9.65829 4.95121 9.3417 5.14647 9.14644L6.79292 7.49999L5.14647 5.85355C4.95121 5.65829 4.95121 5.3417 5.14647 5.14644C5.34173 4.95118 5.65832 4.95118 5.85358 5.14644L7.50002 6.79289L9.14647 5.14644C9.34173 4.95118 9.65832 4.95118 9.85358 5.14644Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg> </button> </div> <input type="text" id="searchInput" placeholder="Search posts..." class="block w-full rounded-lg border h-10 dark:bg-white/5 dark:text-zinc-400 border-black/10 px-4 py-2 font-spline text-sm font-medium text-zinc-800 placeholder-zinc-400 focus:border-zinc-500 focus:outline-none focus:ring-2 lg:px-6 focus:ring-zinc-600/50 disabled:opacity-50 dark:focus:border-zinc-900"> <div id="searchResults" class="max-h-100 rounded-xl mt-2 overflow-y-auto bg-white dark:bg-black overflow-hidden w-full divide-y divide-zinc-200 border-y border-zinc-200 dark:border-y-black dark:divide-white/5 scrollbar-hide"></div> </div> </div> </div> </div> <script>(function(){', '\n  // Wait for the entire page to load before running the script\n  window.addEventListener("load", () => {\n    // Get references to various elements in the search UI\n    const searchButton = document.getElementById("searchButton"); // Button that opens search modal\n    const searchModal = document.getElementById("searchModal"); // Search modal container\n    const modalOverlay = document.getElementById("modalOverlay"); // Overlay that closes modal on click\n    const searchInput = document.getElementById("searchInput"); // Input field for searching\n    const searchResults = document.getElementById("searchResults"); // Container for search results\n    const closeSearch = document.getElementById("closeSearch"); // Button to close search modal\n    // Initialize Fuse.js for fuzzy searching with posts data\n    const fuse = new Fuse(posts, {\n      keys: ["title", "description"], // Fields to search within\n      threshold: 0.3, // Controls search sensitivity (lower = more strict)\n      includeMatches: true, // Includes matching results for highlighting\n    });\n    // Hide search results by default\n    searchResults.classList.add("hidden");\n    // Function to open the search modal\n    function openSearch(e) {\n      e.preventDefault(); // Prevent default action (e.g., form submission)\n      e.stopPropagation(); // Stop event from bubbling up the DOM\n      searchModal.classList.remove("hidden"); // Show modal\n      document.body.style.overflow = "hidden"; // Prevent scrolling when modal is open\n      setTimeout(() => searchInput.focus(), 100); // Focus input field after a short delay\n    }\n    // Function to close the search modal\n    function closeSearchModal(e) {\n      if (e) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      searchModal.classList.add("hidden"); // Hide modal\n      document.body.style.overflow = ""; // Restore scrolling\n      searchInput.value = ""; // Clear search input\n      searchResults.innerHTML = ""; // Clear search results\n      searchResults.classList.add("hidden"); // Ensure results remain hidden\n    }\n    // Function to display search results\n    function renderResults(results) {\n      // If input is empty, hide results\n      if (!searchInput.value.trim()) {\n        searchResults.innerHTML = "";\n        searchResults.classList.add("hidden");\n        return;\n      }\n      // If no results are found, display a message\n      if (results.length === 0) {\n        searchResults.innerHTML = `\n        <div class="p-8">\n            <Text tag="h3" variant="textBase" class="font-medium text-zinc-500 font-medium">\n              There\'s nothing here,...\n            </Text>\n        </div>\n        `;\n        searchResults.classList.remove("hidden");\n        return;\n      }\n      // Generate HTML for each search result\n      searchResults.innerHTML = results\n        .map(\n          (result) => `\n            <a href="/blog/posts/${result.item.slug}" class="block p-8 hover:bg-zinc-100 duration-300 dark:hover:bg-white/5">\n              <h3  class="font-medium text-sm text-zinc-900 dark:text-white block">\n                ${result.item.title}\n              </h3>\n              <p  class="text-zinc-500 text-xs block">\n                ${result.item.description}\n              </p>\n            </a>\n          `\n        )\n        .join(""); // Join all results into a single string of HTML\n      // Make the search results visible\n      searchResults.classList.remove("hidden");\n    }\n    // Add event listeners to open the search modal\n    searchButton.addEventListener("click", openSearch);\n    searchButton.addEventListener("touchend", openSearch); // For mobile devices\n    // Add event listeners to close the search modal\n    closeSearch.addEventListener("click", closeSearchModal);\n    closeSearch.addEventListener("touchend", closeSearchModal);\n    // Close modal when clicking on the overlay (outside the modal)\n    modalOverlay.addEventListener("click", closeSearchModal);\n    modalOverlay.addEventListener("touchend", closeSearchModal);\n    // Listen for user input and perform a search\n    searchInput.addEventListener("input", (e) => {\n      const value = e.target.value.trim(); // Get search input value\n      const results = value ? fuse.search(value) : []; // Perform search only if input isn\'t empty\n      renderResults(results); // Display search results\n    });\n    // Close search modal when the Escape key is pressed\n    document.addEventListener("keydown", (e) => {\n      if (e.key === "Escape" && !searchModal.classList.contains("hidden")) {\n        closeSearchModal();\n      }\n    });\n  });\n})();<\/script>'], ["", '<div class="relative ml-auto w-full"> <button type="button" id="searchButton" class="w-full pr-4 items-center gap-2 flex pl-2 rounded-lg border h-10 dark:bg-white/5 border-black/10 py-2 font-spline text-sm font-medium text-zinc-800 dark:text-zinc-500 placeholder-zinc-400 focus:border-zinc-500 focus:outline-none focus:ring-2 focus:ring-zinc-600/50 disabled:opacity-50" aria-label="Search posts"> <svg xmlns="http://www.w3.org/2000/svg" class="size-4" fill="none" viewBox="0 0 24 24" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path> </svg>\nSearch\n</button> <div id="searchModal" class="fixed inset-0 z-50 overflow-y-auto hidden" role="dialog" aria-modal="true"> <div class="min-h-screen px-4 text-center"> <div class="fixed inset-0 bg-zinc-950/50 backdrop-blur transition-opacity" id="modalOverlay"></div> <div class="inline-block w-full max-w-2xl px-8 mb-8 mt-12 lg:mt-48 text-left align-middle transition-all transform"> <div class="hidden"> <button type="button" id="closeSearch" class="text-zinc-400 hover:text-zinc-500 cursor-pointer ml-auto" aria-label="Close search"> <svg width="15" height="15" viewBox="0 0 15 15" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M0.877075 7.49988C0.877075 3.84219 3.84222 0.877045 7.49991 0.877045C11.1576 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1576 14.1227 7.49991 14.1227C3.84222 14.1227 0.877075 11.1575 0.877075 7.49988ZM7.49991 1.82704C4.36689 1.82704 1.82708 4.36686 1.82708 7.49988C1.82708 10.6329 4.36689 13.1727 7.49991 13.1727C10.6329 13.1727 13.1727 10.6329 13.1727 7.49988C13.1727 4.36686 10.6329 1.82704 7.49991 1.82704ZM9.85358 5.14644C10.0488 5.3417 10.0488 5.65829 9.85358 5.85355L8.20713 7.49999L9.85358 9.14644C10.0488 9.3417 10.0488 9.65829 9.85358 9.85355C9.65832 10.0488 9.34173 10.0488 9.14647 9.85355L7.50002 8.2071L5.85358 9.85355C5.65832 10.0488 5.34173 10.0488 5.14647 9.85355C4.95121 9.65829 4.95121 9.3417 5.14647 9.14644L6.79292 7.49999L5.14647 5.85355C4.95121 5.65829 4.95121 5.3417 5.14647 5.14644C5.34173 4.95118 5.65832 4.95118 5.85358 5.14644L7.50002 6.79289L9.14647 5.14644C9.34173 4.95118 9.65832 4.95118 9.85358 5.14644Z" fill="currentColor" fill-rule="evenodd" clip-rule="evenodd"></path></svg> </button> </div> <input type="text" id="searchInput" placeholder="Search posts..." class="block w-full rounded-lg border h-10 dark:bg-white/5 dark:text-zinc-400 border-black/10 px-4 py-2 font-spline text-sm font-medium text-zinc-800 placeholder-zinc-400 focus:border-zinc-500 focus:outline-none focus:ring-2 lg:px-6 focus:ring-zinc-600/50 disabled:opacity-50 dark:focus:border-zinc-900"> <div id="searchResults" class="max-h-100 rounded-xl mt-2 overflow-y-auto bg-white dark:bg-black overflow-hidden w-full divide-y divide-zinc-200 border-y border-zinc-200 dark:border-y-black dark:divide-white/5 scrollbar-hide"></div> </div> </div> </div> </div> <script>(function(){', '\n  // Wait for the entire page to load before running the script\n  window.addEventListener("load", () => {\n    // Get references to various elements in the search UI\n    const searchButton = document.getElementById("searchButton"); // Button that opens search modal\n    const searchModal = document.getElementById("searchModal"); // Search modal container\n    const modalOverlay = document.getElementById("modalOverlay"); // Overlay that closes modal on click\n    const searchInput = document.getElementById("searchInput"); // Input field for searching\n    const searchResults = document.getElementById("searchResults"); // Container for search results\n    const closeSearch = document.getElementById("closeSearch"); // Button to close search modal\n    // Initialize Fuse.js for fuzzy searching with posts data\n    const fuse = new Fuse(posts, {\n      keys: ["title", "description"], // Fields to search within\n      threshold: 0.3, // Controls search sensitivity (lower = more strict)\n      includeMatches: true, // Includes matching results for highlighting\n    });\n    // Hide search results by default\n    searchResults.classList.add("hidden");\n    // Function to open the search modal\n    function openSearch(e) {\n      e.preventDefault(); // Prevent default action (e.g., form submission)\n      e.stopPropagation(); // Stop event from bubbling up the DOM\n      searchModal.classList.remove("hidden"); // Show modal\n      document.body.style.overflow = "hidden"; // Prevent scrolling when modal is open\n      setTimeout(() => searchInput.focus(), 100); // Focus input field after a short delay\n    }\n    // Function to close the search modal\n    function closeSearchModal(e) {\n      if (e) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      searchModal.classList.add("hidden"); // Hide modal\n      document.body.style.overflow = ""; // Restore scrolling\n      searchInput.value = ""; // Clear search input\n      searchResults.innerHTML = ""; // Clear search results\n      searchResults.classList.add("hidden"); // Ensure results remain hidden\n    }\n    // Function to display search results\n    function renderResults(results) {\n      // If input is empty, hide results\n      if (!searchInput.value.trim()) {\n        searchResults.innerHTML = "";\n        searchResults.classList.add("hidden");\n        return;\n      }\n      // If no results are found, display a message\n      if (results.length === 0) {\n        searchResults.innerHTML = \\`\n        <div class="p-8">\n            <Text tag="h3" variant="textBase" class="font-medium text-zinc-500 font-medium">\n              There\'s nothing here,...\n            </Text>\n        </div>\n        \\`;\n        searchResults.classList.remove("hidden");\n        return;\n      }\n      // Generate HTML for each search result\n      searchResults.innerHTML = results\n        .map(\n          (result) => \\`\n            <a href="/blog/posts/\\${result.item.slug}" class="block p-8 hover:bg-zinc-100 duration-300 dark:hover:bg-white/5">\n              <h3  class="font-medium text-sm text-zinc-900 dark:text-white block">\n                \\${result.item.title}\n              </h3>\n              <p  class="text-zinc-500 text-xs block">\n                \\${result.item.description}\n              </p>\n            </a>\n          \\`\n        )\n        .join(""); // Join all results into a single string of HTML\n      // Make the search results visible\n      searchResults.classList.remove("hidden");\n    }\n    // Add event listeners to open the search modal\n    searchButton.addEventListener("click", openSearch);\n    searchButton.addEventListener("touchend", openSearch); // For mobile devices\n    // Add event listeners to close the search modal\n    closeSearch.addEventListener("click", closeSearchModal);\n    closeSearch.addEventListener("touchend", closeSearchModal);\n    // Close modal when clicking on the overlay (outside the modal)\n    modalOverlay.addEventListener("click", closeSearchModal);\n    modalOverlay.addEventListener("touchend", closeSearchModal);\n    // Listen for user input and perform a search\n    searchInput.addEventListener("input", (e) => {\n      const value = e.target.value.trim(); // Get search input value\n      const results = value ? fuse.search(value) : []; // Perform search only if input isn\'t empty\n      renderResults(results); // Display search results\n    });\n    // Close search modal when the Escape key is pressed\n    document.addEventListener("keydown", (e) => {\n      if (e.key === "Escape" && !searchModal.classList.contains("hidden")) {\n        closeSearchModal();\n      }\n    });\n  });\n})();<\/script>'])), maybeRenderHead(), defineScriptVars({ posts }));
}, "/Users/adamking/claude-code-projects/ak-site/src/components/blog/BlogSearch.astro", void 0);

export { $$BlogSearch as $, $$SubsCta as a };
